jobs:
- job: Source_Distribution
  pool:
    vmImage: ubuntu-18.04
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: 3.7
  - script: |
        python setup.py sdist
    displayName: Build
  - task: PublishPipelineArtifact@1
    inputs:
      path: $(System.DefaultWorkingDirectory)/dist

- job: MacOSWheel
  strategy:
    matrix:
      Python3.5:
        cibw_build: cp35-*
      Python3.6:
        cibw_build: cp36-*
      Python3.7:
        cibw_build: cp37-*
      Python3.8:
        cibw_build: cp38-*
      Python3.9:
        cibw_build: cp39-*
  pool:
    vmImage: macOS-10.14
  variables:
    CIBW_BUILD: variables['cibw_build']
    CIBW_BUILD_VERBOSITY: '1'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'
    - script: |
        pip install --require-hashes -r ci/requirements.macoswheels.txt
      displayName: Install Dependencies
    - script: |
        cibuildwheel --output-dir dist
      displayName: Build
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: dist

- template: azure-pipelines-template.yml
  parameters:
    name: Linux_x64
    os: Linux
    vmImage: ubuntu-18.04
    arch: x64

- template: azure-pipelines-template.yml
  parameters:
    name: macOS_x64
    os: macOS
    vmImage: macOS-10.14
    arch: x64

- template: azure-pipelines-template.yml
  parameters:
    name: Windows_x86
    os: Windows
    vmImage: vs2017-win2016
    arch: x86

- template: azure-pipelines-template.yml
  parameters:
    name: Windows_x64
    os: Windows
    vmImage: vs2017-win2016
    arch: x64

- template: azure-pipelines-anaconda-linux-template.yml
  parameters:
    name: Linux_Anaconda
    vmImage: ubuntu-18.04

- template: azure-pipelines-anaconda-windows-template.yml
  parameters:
    name: Windows_Anaconda
    vmImage: vs2017-win2016
